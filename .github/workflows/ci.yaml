name: CI
on:
  - push
  - pull_request
jobs:
  linux:
    runs-on: ubuntu-20.04
    name: Test - Linux OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        include:
          - elixir: 1.10.x
            otp: 22.x
          - elixir: 1.12.x
            otp: 23.x
          - elixir: 1.14.x
            otp: 24.x
    steps:
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - uses: actions/checkout@v2

      - name: Install libvips build dependencies
        run: sudo apt-get install build-essential libxml2-dev libfftw3-dev libmagickwand-dev libopenexr-dev liborc-0.4-0 gobject-introspection libgsf-1-dev libglib2.0-dev liborc-0.4-dev curl

      - name: Get latest version of libvips
        run: |
          VIPS_LATEST_RELEASE="https://github.com/libvips/libvips/releases/download/v8.13.0/vips-8.13.0.tar.gz"
          echo "VIPS_LATEST_RELEASE=${VIPS_LATEST_RELEASE}" >> $GITHUB_ENV

      - name: Cache libvips artifacts
        uses: actions/cache@v2
        id: vips-cache
        with:
          path: vips
          key: ${{ runner.os }}-vips-${{ env.VIPS_LATEST_RELEASE }}

      - name: Compile libvips from source
        if: steps.vips-cache.outputs.cache-hit != 'true'
        run: |
          mkdir vips
          curl -s -L "${VIPS_LATEST_RELEASE}" | tar xz -C ./vips --strip-components=1
          cd vips
          ./configure
          make

      - name: Install libvips
        run: |
          cd vips
          sudo make install
          sudo ldconfig -v

      - run: mix deps.get
      - run: mix compile --force --warnings-as-errors
      - run: mix test --trace

  check_format:
    runs-on: ubuntu-22.04
    name: Check format
    strategy:
      matrix:
        include:
          - elixir: 1.14.x
            otp: 24.x
    steps:
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - uses: actions/checkout@v2
      - run: mix deps.get
      - run: mix format --check-formatted
